class Interface {
    request;
    graphql;
    log;
    hook;
    auth;
    actions;
    activity;
    apps;
    billing;
    checks;
    codeScanning;
    codesOfConduct;
    emojis;
    enterpriseAdmin;
    gists;
    git;
    gitignore;
    interactions;
    issues;
    licenses;
    markdown;
    meta;
    migrations;
    orgs;
    packages;
    projects;
    pulls;
    rateLimit;
    reactions;
    repos;
    search;
    secretScanning;
    teams;
    users;
    rest;
    paginate;
    constructor(octokit) {
        this.request = octokit.request;
        this.graphql = octokit.graphql;
        this.log = octokit.log;
        this.hook = octokit.hook;
        this.auth = octokit.auth;
        this.actions = octokit.actions;
        this.activity = octokit.activity;
        this.apps = octokit.apps;
        this.billing = octokit.billing;
        this.checks = octokit.checks;
        this.codeScanning = octokit.codeScanning;
        this.codesOfConduct = octokit.codesOfConduct;
        this.emojis = octokit.emojis;
        this.enterpriseAdmin = octokit.enterpriseAdmin;
        this.gists = octokit.gists;
        this.git = octokit.git;
        this.gitignore = octokit.gitignore;
        this.interactions = octokit.interactions;
        this.issues = octokit.issues;
        this.licenses = octokit.licenses;
        this.markdown = octokit.markdown;
        this.meta = octokit.meta;
        this.migrations = octokit.migrations;
        this.orgs = octokit.orgs;
        this.packages = octokit.packages;
        this.projects = octokit.projects;
        this.pulls = octokit.pulls;
        this.rateLimit = octokit.rateLimit;
        this.reactions = octokit.reactions;
        this.repos = octokit.repos;
        this.search = octokit.search;
        this.secretScanning = octokit.secretScanning;
        this.teams = octokit.teams;
        this.users = octokit.users;
        this.rest = octokit.rest;
        this.paginate = octokit.paginate;
    }
}
export { Interface };
export default Interface;
